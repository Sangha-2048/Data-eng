# Create a vitual env
python3 -m venv venv

#Activate virtual env
source venv/bin/activate

# Run pgcli client to interact and run queries on postgres
pip3 install pgcli

# Connect to postgres
pgcli -h localhost -u root -p 5432 -d ny_taxi_postgres_data
(pwd: root)

# To show all tables in postgres
=> \d
=> SELECT COUNT(*) FROM yellow_taxi_data;
=> DROP table yellow_taxi_data;

# Install jupyter package
pip3 install jupyter

# Downloading dataset
wget https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz 

# To create a sample file
head -n -100 <file_name> > <sample_file_name>

# To count number of line
wc -l <file_name>

# .swp was created, due to which unable to open the commands_ran.txt file
# .commands_ran.txt.swp
ll -a # To see .swp file

# To convert a jupyter notebook to script
jupyter nbconvert --to=script upload_data.ipynb

# Installing docker compose

sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

docker-compose --version

# Running docker-compose.yml
docker-compose up

# Running upload_data.py script to upload the data 
# Condition domcker-compose up command should be fired first
python upload_data.py --user=root --pwd=root --host=localhost --port=5432 --db=ny_taxi_postgres_data --table_name=yellow_taxi_data --url=dsfsd

# Docker build command to create ingestion image

docker build -t taxi_ingest:v001 .

# Passing all the arguments to the taxi_ingest image

docker run -it --network=pg-network taxi_ingest:v001 --user=root --pwd=root --host=localhost --port=5432 --db=ny_taxi_postgres_data --table_name=yellow_taxi_data --url=dsfsd

# Start a python http server
python -m http.server

# Get ip using hostname -I command since docker doesn't have files on its local host
# therefore specifying actual ip of the machine

http://172.17.0.1:8000/yellow_tripdata_2021-01.csv.gz

# for wget command

# Downloaded taxi_zone_lookup.csv from 
# https://github.com/DataTalksClub/nyc-tlc-data/releases/download/misc/taxi_zone_lookup.csv

# Run upload_data.ipynb
# Run upload_taxi_zone_data.ipynb
# Run pgcli command 
pgcli -h localhost -u root -p 5432 -d ny_taxi_postgres_data

# Running a join query on yellow taxi data and zone data
SELECT 
tpep_pickup_datetime, tpep_dropoff_datetime, total_amount, 
CONCAT(zpu."Borough" , ' / ' , zpu."Zone") as "pick_up_loc",
CONCAT(zdo."Borough" , ' / ' , zdo."Zone") as "dropoff_loc"
FROM yellow_taxi_data t, zones zpu, zones zdo 
WHERE t."PULocationID" = zpu."LocationID" 
AND 
t."DOLocationID" = zdo."LocationID" 
limit 100;

# Writing same thing with join Condition
SELECT 
tpep_pickup_datetime, tpep_dropoff_datetime, total_amount, 
CONCAT(zpu."Borough" , ' / ' , zpu."Zone") as "pick_up_loc",
CONCAT(zdo."Borough" , ' / ' , zdo."Zone") as "dropoff_loc"
FROM yellow_taxi_data t
JOIN zones zpu ON 
t."PULocationID" = zpu."LocationID"
JOIN zones zdo ON 
t."DOLocationID" = zdo."LocationID" 
LIMIT 5;

Truncating timestamp field to DAY

DATE_TRUNC('DAY', tpep_dropoff_datetime)
OR
CAST(tpep_dropoff_datetime AS DATE)